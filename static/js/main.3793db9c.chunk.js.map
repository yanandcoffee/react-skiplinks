{"version":3,"sources":["../../src/index.tsx","../../src/useSkipLinks.tsx","App.tsx","index.tsx"],"names":["SkipLinks","className","skipLinks","useSkipLinks","useState","useEffect","skipLinkElements","document","links","Array","skipLink","title","id","setSkipLinks","classNames","styles","React","link","key","href","App","data-skip-link","data-icon","data-size","aria-label","language","style","okaidia","ReactDOM","render","getElementById"],"mappings":"8PAUaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAClBC,E,WCRcC,MACYC,mBAAlC,IADsBD,mBAChB,EADgBA,KAChB,EADgBA,KAkBtB,OAfAE,qBAAU,WACR,IAAMC,EAAmBC,0BAAzB,uCAGMC,EAAgBC,MAAA,QAEnBC,YAAD,MAA4B,CAC1BC,MAAOD,oBADmB,GAE1BE,GAAIF,EAASE,OAIjBC,OAZFR,IAeO,CAAEH,aDVaC,GAAdD,UAER,OAAKA,EAAL,OAGE,+BAAKD,UAAWa,IAAWC,EAAD,IACxBC,kCACGd,EAAA,KAAee,YAAD,OACb,8BAAIC,IAAKD,EAAKN,OACZ,6BAAGQ,KAAI,WAAMF,EAAKL,KAAOK,EALnC,aAF8B,M,kCEyHjBG,EA9HH,WACV,OACE,oCACE,yBAAKnB,UAAU,UACb,4BAAQoB,iBAAe,qBAAqBT,GAAG,gBAC7C,sDACA,4BACE,oGAIF,kBAAC,IAAD,CAAcO,KAAK,kDAAkDG,YAAU,eAAeC,YAAU,QAAQC,aAAW,+CAA3H,QAA6L,IAC7L,kBAAC,IAAD,CAAcL,KAAK,kCAAkCI,YAAU,QAAQC,aAAW,kCAAlF,yBAEF,kBAAC,EAAD,MACA,6BAASH,iBAAe,cAAcT,GAAG,SACvC,qCACA,kCACM,gDADN,sIAIA,2CACA,kBAAC,IAAD,CAAmBa,SAAS,OAAOC,MAAOC,KAA1C,wWAOA,gDACA,kBAAC,IAAD,CAAmBF,SAAS,OAAOC,MAAOC,KAA1C,oVAWA,mDACuB,+CADvB,0FAIA,kBAAC,IAAD,CAAmBF,SAAS,OAAOC,MAAOC,KAA1C,4BAIA,8FACA,2GAAgF,2CAAhF,8CAEF,6BAASN,iBAAe,0BAA0BT,GAAG,oBACnD,iDACA,gEACqC,IACnC,6DAFF,UAEkD,IAChD,8CAHF,oDAIe,gDAJf,iCAIwE,uCAJxE,QAImG,wCAJnG,sDAK4B,+CAL5B,eAOA,iDACA,kBAAC,IAAD,CAAmBa,SAAS,MAAMC,MAAOC,KAAzC,oeAqBA,0DACA,kBAAC,IAAD,CAAmBF,SAAS,MAAMC,MAAOC,KAAzC,khBAsBA,kCACM,+CADN,iDAIF,6BAASN,iBAAe,qBAAqBT,GAAG,gBAC9C,4CACA,+QACoP,IAClP,uBAAGO,KAAK,uDAAR,qCAFF,MAKF,4BAAQE,iBAAe,eAAeT,GAAG,UAAzC,aACa,IACX,uBAAGO,KAAK,4CAAR,WAA2D,uBAAGA,KAAK,yCAAR,8BCzHrES,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,U","file":"static/js/main.3793db9c.chunk.js","sourcesContent":["import * as React from 'react'\nimport classNames from 'classnames'\nimport styles from './styles.module.css'\nimport useSkipLinks from './useSkipLinks'\nimport { Link } from './interfaces'\n\ninterface Props {\n  className?: string\n}\n\nexport const SkipLinks = ({ className }: Props) => {\n  const { skipLinks } = useSkipLinks()\n\n  if (!skipLinks.length) return null\n\n  return (\n    <nav className={classNames(styles.skipLinks, className)}>\n      <ul>\n        {skipLinks.map((link: Link) => (\n          <li key={link.title}>\n            <a href={`#${link.id}`}>{link.title}</a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n","import { useState, useEffect } from 'react'\r\nimport { Link } from './interfaces'\r\n\r\nexport default function useSkipLinks() {\r\n  const [skipLinks, setSkipLinks] = useState<Link[]>([])\r\n\r\n  useEffect(() => {\r\n    const skipLinkElements = document.querySelectorAll(\r\n      '[data-skip-link]:not(pre):not(code)'\r\n    )\r\n    const links: Link[] = Array.from(\r\n      skipLinkElements,\r\n      (skipLink: HTMLElement) => ({\r\n        title: skipLink.dataset.skipLink || '',\r\n        id: skipLink.id\r\n      })\r\n    )\r\n\r\n    setSkipLinks(links)\r\n  }, [])\r\n\r\n  return { skipLinks }\r\n}\r\n","import React from 'react'\n\nimport { SkipLinks } from 'react-skiplinks'\nimport 'react-skiplinks/dist/index.css'\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport GitHubButton from 'react-github-btn'\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"parent\">\n        <header data-skip-link=\"Go to Introduction\" id=\"introduction\">\n          <h1>React {`<SkipLinks />`}</h1>\n          <h2>\n            <em>\n              Easily and consistently add skip navigation links to your React app\n            </em>\n          </h2>\n          <GitHubButton href=\"https://github.com/yanandcoffee/react-skiplinks\" data-icon=\"octicon-star\" data-size=\"large\" aria-label=\"Star yanandcoffee/react-skiplinks on GitHub\">Star</GitHubButton>{\" \"}\n          <GitHubButton href=\"https://github.com/yanandcoffee\" data-size=\"large\" aria-label=\"Follow @yanandcoffee on GitHub\">Follow @yanandcoffee</GitHubButton>\n        </header>\n        <SkipLinks />\n        <section data-skip-link=\"Go to Usage\" id=\"usage\">\n          <h2>Usage</h2>\n          <p>\n            Add <code>data-skip-link</code> attribute with the text you'd like to show for the skip link, and an ID to all the\n            elements you'd like to generate skip links to.\n          </p>\n          <p>For example:</p>\n          <SyntaxHighlighter language=\"html\" style={okaidia}>\n            {`<section data-skip-link=\"Go to Introduction\" id=\"introduction\"></section>\n<section data-skip-link=\"Go to Usage\" id=\"usage\"></section>\n<section data-skip-link=\"Go to How Does It Work?\" id=\"how-does-it-work\"></section>\n<section data-skip-link=\"Go to More Details\" id=\"more-details\"></section>\n<section data-skip-link=\"Go to Footer\" id=\"footer\"></section>`}\n          </SyntaxHighlighter>\n          <p>It will generate:</p>\n          <SyntaxHighlighter language=\"html\" style={okaidia}>\n            {`<nav class=\"skipLinks\">\n  <ul>\n    <li><a href=\"#introduction\">Go to Introduction</a></li>\n    <li><a href=\"#usage\">Go to Usage</a></li>\n    <li><a href=\"#how-does-it-work\">Go to How Does It Work?</a></li>\n    <li><a href=\"#more-details\">Go to More Details</a></li>\n    <li><a href=\"#footer\">Go to Footer</a></li>\n  </ul>\n</nav>`}\n          </SyntaxHighlighter>\n          <p>\n            In your app, add the <code>{`<SkipLinks />`}</code> component where you'd like\n            them to be (usually one of the first items, or at bottom):\n          </p>\n          <SyntaxHighlighter language=\"html\" style={okaidia}>\n            {`<SkipLinks />\n{content}`}\n          </SyntaxHighlighter>\n          <p>Try it out! On this page, it was placed right after the header.</p>\n          <p>By default, the component itself has no imposed styles, but it will accept a <code>className</code> prop if you wish to style the component.</p>\n        </section>\n        <section data-skip-link=\"Go to How Does It Work?\" id=\"how-does-it-work\">\n          <h2>How does it work?</h2>\n          <p>\n            Internal to the component, it uses{\" \"}\n            <code>document.querySelectorAll()</code> in its{\" \"}\n            <code>{`useSkipLinks`}</code> hook to query for all the elements\n            that use the <code>data-skip-link</code> attribute (except within the <code>{`<pre>`}</code> and <code>{`<code>`}</code> tags) and constructs an\n            array compatible with the <code>{`<SkipLinks />`}</code> component.\n          </p>\n          <h3>useSkipLinks hook</h3>\n          <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n            {`import { useState, useEffect } from \"react\";\n  \nexport default function useSkipLinks() {\n  const [skipLinks, setSkipLinks] = useState([]);\n\n  useEffect(() => {\n    const skipLinkElements = document.querySelectorAll(\n      \"[data-skip-link]:not(pre):not(code)\"\n    );\n    const links = Array.from(skipLinkElements, skipLink => ({\n      title: skipLink.dataset.skipLink,\n      id: skipLink.id\n    }));\n\n    setSkipLinks(links);\n  }, []);\n\n  return { skipLinks };\n}`}\n          </SyntaxHighlighter>\n          <h3>{`<SkipLinks />`} component</h3>\n          <SyntaxHighlighter language=\"jsx\" style={okaidia}>\n            {`import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./SkipLinks.module.css\";\nimport useSkipLinks from \"./useSkipLinks\";\n\nexport default function SkipLinks({ className }) {\n  const { skipLinks } = useSkipLinks();\n  \n  return (\n    <nav className={classNames(styles.skipLinks, className)}>\n      <ul>\n        {skipLinks.map(link => (\n          <li key={link.title}>\n            <a href=#{link.id}>Go to {link.title}</a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}`}\n          </SyntaxHighlighter>\n          <p>\n            The <code>{`<SkipLinks />`}</code> component itself is pretty straightforward.\n          </p>\n        </section>\n        <section data-skip-link=\"Go to More Details\" id=\"more-details\">\n          <h2>More Details</h2>\n          <p>\n            This was originally written in plain vanilla React, then converted to Typescript. The reason `data-skip-link` allows freeform text is to support localization. You can read more about my thought process of this implementation in my blog post,{\" \"}\n            <a href=\"https://www.yanandcoffee.com/2020/07/05/skip-links/\">{`Creating a <SkipLinks/> Component`}</a>.\n          </p>\n        </section>\n        <footer data-skip-link=\"Go to Footer\" id=\"footer\">\n          Created by{\" \"}\n          <a href=\"https://www.linkedin.com/in/yanandcoffee\">Yan Li. <a href=\"https://icons8.com/icon/118557/github\">GitHub icon by Icons8</a></a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}